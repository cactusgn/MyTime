<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AH/+AAB//gAAf/4AAH/+AAB//AAAP/wAAD8=
</value>
  </data>
</root>